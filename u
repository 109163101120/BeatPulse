[1mdiff --git a/src/BeatPulse.UI/Core/UIEmbeddedResourceReader.cs b/src/BeatPulse.UI/Core/UIEmbeddedResourceReader.cs[m
[1mdeleted file mode 100644[m
[1mindex 5cec1f2..0000000[m
[1m--- a/src/BeatPulse.UI/Core/UIEmbeddedResourceReader.cs[m
[1m+++ /dev/null[m
[36m@@ -1,62 +0,0 @@[m
[31m-ï»¿using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.IO;[m
[31m-using System.Reflection;[m
[31m-[m
[31m-namespace BeatPulse.UI.Core[m
[31m-{[m
[31m-    public class UIEmbeddedResourcesReader : IUIResourceReader[m
[31m-    {[m
[31m-        private readonly Assembly _assembly;[m
[31m-[m
[31m-        public UIEmbeddedResourcesReader(Assembly assembly)[m
[31m-        {[m
[31m-            _assembly = assembly ?? throw new ArgumentNullException(nameof(assembly));[m
[31m-        }[m
[31m-[m
[31m-        public IEnumerable<UIResource> GetUIResources[m
[31m-        {[m
[31m-            get[m
[31m-            {[m
[31m-                var embeddedResources = _assembly.GetManifestResourceNames();[m
[31m-[m
[31m-                return ParseEmbeddedResources(embeddedResources);[m
[31m-            }[m
[31m-        }[m
[31m-[m
[31m-        private IEnumerable<UIResource> ParseEmbeddedResources(string[] embeddedFiles)[m
[31m-        {[m
[31m-            const char SPLIT_SEPARATOR = '.';[m
[31m-[m
[31m-            var resourceList = new List<UIResource>();[m
[31m-[m
[31m-            foreach (var file in embeddedFiles)[m
[31m-            {[m
[31m-                var segments = file.Split(SPLIT_SEPARATOR);[m
[31m-[m
[31m-                //temporal mapping[m
[31m-[m
[31m-                var fileName = segments[segments.Length - 2];[m
[31m-[m
[31m-                var extension = segments[segments.Length - 1];[m
[31m-[m
[31m-                var contentStream = _assembly.GetManifestResourceStream(file);[m
[31m-[m
[31m-                using (var reader = new StreamReader(contentStream))[m
[31m-                {[m
[31m-[m
[31m-                    string result = reader.ReadToEnd();[m
[31m-                    [m
[31m-                    //temporal extension mapping[m
[31m-                    resourceList.Add([m
[31m-[m
[31m-                        UIResource.Create($"{fileName}.{extension}", result,[m
[31m-[m
[31m-                        extension.ToLower().Contains("js") ? "text/javascript" : "text/html"));[m
[31m-                }[m
[31m-            }[m
[31m-[m
[31m-            return resourceList;[m
[31m-        }[m
[31m-    }[m
[31m-}[m
